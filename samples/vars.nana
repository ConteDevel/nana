# Integer
var1: Int = -1

# Number
var2: Num = -0.1

# String
var3: Str = 'String'

# Bit
var4: Bit = true

# Function
var5: ([Str]) Bit = (args: [Str]) Bit: true

# List
var6: [Int] = [0, 1, 2, 3]

# Tuple
var7: (Str, Bit) = ('Option', false)

# Named typle
var8: (option: Str, flag: Bit) = ('Option', false)

# Dictionary
var9: {Str: Int} = {
    'Key1' = 5,
    'Key2' = 6,
}

# Set
var10: {Int} = {1, 2, 3, 4}

# Structure
var11: {
    key1: Int,
    key2: Str
} = {
    key1 = 1,
    key2 = 2,
}

# Type
Var12: <> = <{
    key1: Int,
    key2 = 'Test',
    key3 = (a: Int, b: Int) Int -> a + b
}, none>

# Variable of Var12 type
var13: Var12 = Var12::none

# Variable of Var12 type
var14: Var12 = Var12::{
    key1 = 10
}

# Type 2
Var15 = <Int, Num>

# Variable of Var15 type
var16: Var15 = 1

# Dynamic type
var17: Any = 'String'