mod 'io'


partition = (!list, low: Int, high: Int) -> Int:
    !pivot = high - 1
    !idx = low
    while idx != pivot:
        if list[idx] >= list[pivot]:
            if idx < pivot - 1:
                list[idx], list[pivot - 1], list[pivot] = list[pivot - 1], list[pivot], list[idx]
            else:
                list[idx], list[pivot] = list[pivot], list[idx]
            pivot -= 1
        idx += 1
    return pivot


qsort = (!list, low: Int = 0, high: Int = -1):
    if not list:
        return list
    if high < 0:
        high = len(list)
    pivot = partition(list, low, high)
    qsort(list, 0, pivot)
    qsort(list, pivot, high)


list = [5, 4, 1, 8]
qsort(list)
io.print(list)