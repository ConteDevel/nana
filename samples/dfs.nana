pub Node = <{
    left: Node,
    right: Node,
    data: Int
}, .None>

pub dfs = (root: Node, target: Int) -> Bool {
    if root == Node.None {
        ret false
    }
    ret root.data == target or dfs(root.left, target) or dfs(root.right, target)
}

pub dfs2 = (root: Node, target: Int) -> Bool {
    !stack: [Node] = [root]
    while stack {
        if stack[-1] == Node.None {
            stack = stack[0: -1]
        } 
        else {
            top = stack[-1]
            if top.data == target {
                ret true
            }
            stack = [*stack[0: -1], top.right, top.left]
        }
    }
    ret false
}
